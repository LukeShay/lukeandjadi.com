name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  optimize-images:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: calibreapp/image-actions@main
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
  pulumi-dev:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.18.3'
          cache: 'npm'
      - run: npm ci
        working-directory: pulumi
      - uses: pulumi/actions@v3
        with:
          command: preview
          stack-name: dev
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          work-dir: pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  pulumi-prd:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.18.3'
          cache: 'npm'
      - run: npm ci
        working-directory: pulumi
      - uses: pulumi/actions@v3
        with:
          command: preview
          stack-name: prod
          comment-on-pr: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          work-dir: pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  validate:
    runs-on: ubuntu-20.04
    env:
      CLERK_API_KEY: ${{ secrets.CLERK_API_KEY }}
      DSN: ${{ secrets.DSN }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      NEXT_PUBLIC_CLERK_FRONTEND_API: ${{ secrets.NEXT_PUBLIC_CLERK_FRONTEND_API }}
      NEXT_PUBLIC_DATADOG_CLIENT_TOKEN: ${{ secrets.NEXT_PUBLIC_DATADOG_CLIENT_TOKEN }}
      NEXT_PUBLIC_FATHOM_SITE_ID: ${{ secrets.NEXT_PUBLIC_FATHOM_SITE_ID }}
      NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
      RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
      DOMAIN: http://localhost:3000
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.18.3'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run prettier:check
      - run: npm run test
  acceptance:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.18.3'
          cache: 'npm'
      - run: npm i -g npm@8
      - run: |
          docker run -d --name=roach -p 26257:26257 cockroachdb/cockroach:v21.2.4 start-single-node --insecure
          docker exec roach ./cockroach sql --insecure --execute "create role lukeandjadi_com with login"
      - run: |
          make schema-migrate
          make seed-migrate
        env:
          MIGRATION_DSN: postgresql://root@localhost:26257/defaultdb?sslmode=disable
      - uses: cypress-io/github-action@v2
        with:
          browser: chrome
          install-command: npm ci
          build: npm run build
          start: npm run start
          spec: cypress/integration/*
          config: baseUrl=http://localhost:3000,port=4000
          wait-on: 'http://localhost:3000'
        env:
          CLERK_API_KEY: ${{ secrets.CLERK_API_KEY }}
          DSN: postgresql://lukeandjadi_com@localhost:26257/defaultdb?sslmode=disable
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NEXT_PUBLIC_CLERK_FRONTEND_API: ${{ secrets.NEXT_PUBLIC_CLERK_FRONTEND_API }}
          NEXT_PUBLIC_DATADOG_CLIENT_TOKEN: ${{ secrets.NEXT_PUBLIC_DATADOG_CLIENT_TOKEN }}
          NEXT_PUBLIC_FATHOM_SITE_ID: ${{ secrets.NEXT_PUBLIC_FATHOM_SITE_ID }}
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          DOMAIN: http://localhost:3000
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
